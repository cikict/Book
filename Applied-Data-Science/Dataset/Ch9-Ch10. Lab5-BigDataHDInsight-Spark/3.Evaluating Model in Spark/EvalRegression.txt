# 1. Import Spark SQL and Spark ML Libraries
from pyspark.sql.types import *
from pyspark.sql.functions import *

from pyspark.ml import Pipeline
from pyspark.ml.regression import LogisticRegression
from pyspark.ml.feature import VectorAssembler

# Load the flight dataset
csv = spark.read.csv('wasb:///data/flights.csv', inferSchema=True, header=True )

# Select features and labels
data = csv.select("DayofMonth","DayOfWeek", "OriginAirportID", "DestAirportID","DepDelay",col("ArrDelay").alias("label"))
data.show()

# Split the data
splits = data.randomSplit([0.7, 0.3])
train = splits[0]
test = splits[1]



# 2. Define the pipeline
assembler = VectorAssembler( inputCols = ["DayofMonth","DayOfWeek", "OriginAirportID", "DestAirportID","DepDelay"], outputCol="features")
lr = LinearRegression( labelCol="label", featuresCol="features", maxIter=10, regParam=0.3)
pipeline = Pipeline(stages=[assmbler, lr])

# Train model
pipelineModel = pipeline.fit( train )



# 3. Test the model
prediction = pipelineModel.transform( test )
predicted = prediction.select("features", "prediction", "trueLabel" )
predicted.show()


# 4. Examine the Predicted and Actual Values
predicted.createOrReplaceTempView("regressionPredictions")

%% sql
SELECT trueLabel, prediction FROM regressionPredictions



# 5. Retrieve the Root Mean Square Error (RMSE)
from pyspark.ml.evaluation import RegressionEvaluator

evaluator = RegressionEvaluator( labelCol="trueLabel", predictionCol="prediction", metricName="rmse")
rmse = evaluator.evaluate( prediction )
print "Root Mean Squared Error (RMSE):". rmse




